apiVersion: install.istio.io/v1alpha1
kind: IstioOperator
metadata:
  annotations:
    install.istio.io/ignoreReconcile: "true"
  generation: 1
  managedFields:
  - apiVersion: install.istio.io/v1alpha1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:install.istio.io/ignoreReconcile: {}
          f:kubectl.kubernetes.io/last-applied-configuration: {}
      f:spec:
        .: {}
        f:components:
          .: {}
          f:base:
            .: {}
            f:enabled: {}
          f:cni:
            .: {}
            f:enabled: {}
          f:egressGateways: {}
          f:ingressGateways: {}
          f:istiodRemote:
            .: {}
            f:enabled: {}
          f:pilot:
            .: {}
            f:enabled: {}
        f:hub: {}
        f:meshConfig:
          .: {}
          f:accessLogFile: {}
          f:defaultConfig:
            .: {}
            f:proxyMetadata: {}
          f:enablePrometheusMerge: {}
          f:outboundTrafficPolicy:
            .: {}
            f:mode: {}
        f:profile: {}
        f:tag: {}
        f:values:
          .: {}
          f:base:
            .: {}
            f:enableCRDTemplates: {}
            f:validationURL: {}
          f:gateways:
            .: {}
            f:istio-egressgateway:
              .: {}
              f:autoscaleEnabled: {}
              f:env: {}
              f:name: {}
              f:secretVolumes: {}
              f:type: {}
              f:zvpn: {}
            f:istio-ingressgateway:
              .: {}
              f:autoscaleEnabled: {}
              f:env: {}
              f:name: {}
              f:secretVolumes: {}
              f:type: {}
              f:zvpn: {}
          f:global:
            .: {}
            f:arch:
              .: {}
              f:amd64: {}
              f:ppc64le: {}
              f:s390x: {}
            f:configValidation: {}
            f:defaultNodeSelector: {}
            f:defaultPodDisruptionBudget:
              .: {}
              f:enabled: {}
            f:defaultResources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
            f:imagePullPolicy: {}
            f:imagePullSecrets: {}
            f:istioNamespace: {}
            f:istiod:
              .: {}
              f:enableAnalysis: {}
            f:jwtPolicy: {}
            f:logAsJson: {}
            f:logging:
              .: {}
              f:level: {}
            f:meshNetworks: {}
            f:mountMtlsCerts: {}
            f:multiCluster:
              .: {}
              f:clusterName: {}
              f:enabled: {}
            f:network: {}
            f:omitSidecarInjectorConfigMap: {}
            f:oneNamespace: {}
            f:operatorManageWebhooks: {}
            f:pilotCertProvider: {}
            f:priorityClassName: {}
            f:proxy:
              .: {}
              f:autoInject: {}
              f:clusterDomain: {}
              f:componentLogLevel: {}
              f:enableCoreDump: {}
              f:excludeIPRanges: {}
              f:excludeInboundPorts: {}
              f:excludeOutboundPorts: {}
              f:image: {}
              f:includeIPRanges: {}
              f:logLevel: {}
              f:privileged: {}
              f:readinessFailureThreshold: {}
              f:readinessInitialDelaySeconds: {}
              f:readinessPeriodSeconds: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:statusPort: {}
              f:tracer: {}
            f:proxy_init:
              .: {}
              f:image: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
            f:sds:
              .: {}
              f:token:
                .: {}
                f:aud: {}
            f:sts:
              .: {}
              f:servicePort: {}
            f:tracer:
              .: {}
              f:datadog: {}
              f:lightstep: {}
              f:stackdriver: {}
              f:zipkin: {}
            f:useMCP: {}
          f:istiodRemote:
            .: {}
            f:injectionURL: {}
          f:pilot:
            .: {}
            f:autoscaleEnabled: {}
            f:autoscaleMax: {}
            f:autoscaleMin: {}
            f:configMap: {}
            f:cpu:
              .: {}
              f:targetAverageUtilization: {}
            f:deploymentLabels: {}
            f:enableProtocolSniffingForInbound: {}
            f:enableProtocolSniffingForOutbound: {}
            f:env: {}
            f:image: {}
            f:keepaliveMaxServerConnectionAge: {}
            f:nodeSelector: {}
            f:replicaCount: {}
            f:traceSampling: {}
          f:telemetry:
            .: {}
            f:enabled: {}
            f:v2:
              .: {}
              f:enabled: {}
              f:metadataExchange:
                .: {}
                f:wasmEnabled: {}
              f:prometheus:
                .: {}
                f:enabled: {}
                f:wasmEnabled: {}
              f:stackdriver:
                .: {}
                f:configOverride: {}
                f:enabled: {}
                f:logging: {}
                f:monitoring: {}
                f:topology: {}
    manager: istioctl
    operation: Update
    time: "2021-02-18T02:57:09Z"
  name: installed-state
  namespace: istio-system
  selfLink: /apis/install.istio.io/v1alpha1/namespaces/istio-system/istiooperators/installed-state
spec:
  components:
    base:
      enabled: true
    cni:
      enabled: false
    egressGateways:
    - enabled: false
      name: istio-egressgateway
    ingressGateways:
    - enabled: false
      name: istio-ingressgateway
    istiodRemote:
      enabled: false
    pilot:
      enabled: true
  hub: docker.io/istio
  meshConfig:
    accessLogFile: "{{ .Values.settings.istio_logging }}"
    defaultConfig:
      proxyMetadata: {}
    enablePrometheusMerge: true
    outboundTrafficPolicy:
      mode: {{ .Values.settings.istio_mode }}
  profile: default
  tag: 1.9.0
  values:
    base:
      enableCRDTemplates: false
      validationURL: ""
    gateways:
      istio-egressgateway:
        autoscaleEnabled: true
        env: {}
        name: istio-egressgateway
        secretVolumes:
        - mountPath: /etc/istio/egressgateway-certs
          name: egressgateway-certs
          secretName: istio-egressgateway-certs
        - mountPath: /etc/istio/egressgateway-ca-certs
          name: egressgateway-ca-certs
          secretName: istio-egressgateway-ca-certs
        type: ClusterIP
        zvpn: {}
      istio-ingressgateway:
        autoscaleEnabled: true
        env: {}
        name: istio-ingressgateway
        secretVolumes:
        - mountPath: /etc/istio/ingressgateway-certs
          name: ingressgateway-certs
          secretName: istio-ingressgateway-certs
        - mountPath: /etc/istio/ingressgateway-ca-certs
          name: ingressgateway-ca-certs
          secretName: istio-ingressgateway-ca-certs
        type: LoadBalancer
        zvpn: {}
    global:
      arch:
        amd64: 2
        ppc64le: 2
        s390x: 2
      configValidation: true
      defaultNodeSelector: {}
      defaultPodDisruptionBudget:
        enabled: true
      defaultResources:
        requests:
          cpu: 10m
      imagePullPolicy: "IfNotPresent"
      imagePullSecrets: [regcred,registry-creds]
      istioNamespace: istio-system
      istiod:
        enableAnalysis: false
      jwtPolicy: third-party-jwt
      logAsJson: false
      logging:
        level: default:info
      meshNetworks: {}
      mountMtlsCerts: false
      multiCluster:
        clusterName: ""
        enabled: false
      network: ""
      omitSidecarInjectorConfigMap: false
      oneNamespace: false
      operatorManageWebhooks: false
      pilotCertProvider: istiod
      priorityClassName: ""
      proxy:
        autoInject: enabled
        clusterDomain: cluster.local
        componentLogLevel: misc:error
        enableCoreDump: false
        excludeIPRanges: ""
        excludeInboundPorts: ""
        excludeOutboundPorts: ""
        image: docker.repo.bendigobank.com.au/istio/proxyv2:1.9.0
        includeIPRanges: '*'
        logLevel: warning
        privileged: {{ .Values.settings.istio_privileged }}
        readinessFailureThreshold: 30
        readinessInitialDelaySeconds: 1
        readinessPeriodSeconds: 2
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
        statusPort: 15020
        tracer: zipkin
      proxy_init:
        image: docker.repo.bendigobank.com.au/istio/proxyv2:1.9.0
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 10m
            memory: 10Mi
      sds:
        token:
          aud: istio-ca
      sts:
        servicePort: 0
      tracer:
        datadog: {}
        lightstep: {}
        stackdriver: {}
        zipkin: {}
      useMCP: false
    istiodRemote:
      injectionURL: ""
    pilot:
      autoscaleEnabled: true
      autoscaleMax: 5
      autoscaleMin: 1
      configMap: true
      cpu:
        targetAverageUtilization: 80
      deploymentLabels: null
      enableProtocolSniffingForInbound: true
      enableProtocolSniffingForOutbound: true
      env: {}
      image: docker.repo.bendigobank.com.au/istio/pilot:1.9.0
      keepaliveMaxServerConnectionAge: 30m
      nodeSelector: {}
      replicaCount: 1
      traceSampling: 1
    telemetry:
      enabled: true
      v2:
        enabled: true
        metadataExchange:
          wasmEnabled: false
        prometheus:
          enabled: true
          wasmEnabled: false
        stackdriver:
          configOverride: {}
          enabled: false
          logging: false
          monitoring: false
          topology: false
